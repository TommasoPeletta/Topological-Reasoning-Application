// Topological Reasoning Application
// Jonathan Lo, Tommaso Peletta, Adrien Razurel


import "stdlib.imgql"


let flt(x,a) = distleq(x,distgeq(x,!a))


load image = "Apex_map.jpg"



let r = red(image)
let g = green(image)
let b = blue(image)


//let tendentToGray = (r >. 50) & (g >. 50) & (b >. 20) & (b <. 35) & (r <. 100) & (g <. 70)
//save "output/tendentToGray.png" tendentToGray


//let background  = touch(!tendentToGray,border)
//save "output/background.png" background

// Montagne :
//let montagne = flt(2,!flt(3,background))
//save "output/montagne.png" montagne






// Segmentation des batiments :
let buildings = ((r >. 100) & (g >. 75) & (b >. 75)) & (r <. 200) & (g <. 200) & (b <. 200)
save "output/buildings.png" buildings

// Masque avec la zone choisie :
let mask_circle = distleq(90,((r <. 1) & (g <. 11) & (b >. 250)))
save "output/mask_circle.png" mask_circle

// Filtre sur les batiments :
let buildings_filtered = flt(2,(buildings))
save "output/buildings_filtered.png" buildings_filtered

// Segmentation des batiments de la zone du masque :
let buildings_seg = and(mask_circle, buildings_filtered)
save "output/relay_buildings_seg.png" buildings_seg

// Remise des couleurs des batiments segmentes :
let buildings_seg_rgb = rgb(mask(r,buildings_seg),mask(g,buildings_seg),mask(b,buildings_seg))
save "output/relay_buildings_seg_rgb.png" buildings_seg_rgb
