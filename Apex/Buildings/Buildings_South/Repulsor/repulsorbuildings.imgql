import "stdlib.imgql"

let flt(x,a) = distleq(x,distgeq(x,!a))

load image = "apexrepulsor.png"

let r = red(image)
let g = green(image)
let b = blue(image)

let repulsorbuildings = ((r >. 85) & (g >. 90) & (b >. 90)) & (r <. 180) & (g <. 180) & (b <. 180)
let repulsorMask0 = distleq(200,((r <. 1) & (g <. 11) & (b >. 250)))

let repulsorfilter = flt(5,flt(2,flt(1,(repulsorbuildings))))
//let repulsorfilter = flt(4,flt(2,(repulsorbuildings)))
let repulsorMask = and(repulsorMask0,repulsorfilter)
//let maskedrepulsor = rgb(mask(r,repulsorMask0),mask(g,repulsorMask0),mask(b,repulsorMask0))
let maskedrepulsor = rgb(mask(r,repulsorMask),mask(g,repulsorMask),mask(b,repulsorMask))
/////
// Save the intermediate result
// Do check all the intermediate results!
// (use xdg-open IMAGE_FILE_NAME to open the default image viewer on ubuntu)
// In the viewer you can use the left and right arrow keys to navigate between images.
//

save "./output/repulsorbuildings.png" repulsorbuildings
save "./output/repulsorfilter.png" repulsorfilter
save "../../Buildings_All_Map/repulsor_buildingsSeg.png" repulsorMask
save "./output/repulsorMask0.png" repulsorMask0
save "./output/maskedrepulsor.png" maskedrepulsor
