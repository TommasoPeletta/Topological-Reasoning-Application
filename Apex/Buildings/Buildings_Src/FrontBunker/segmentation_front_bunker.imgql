// Topological Reasoning Application
// Jonathan Lo, Tommaso Peletta, Adrien Razurel


import "stdlib.imgql"


let flt(x,a) = distleq(x,distgeq(x,!a))


load image = "frontbunker.jpg"

let r = red(image)
let g = green(image)
let b = blue(image)


// Color treshold
let treshold = ((r >. 90) & (g >. 65) & (b >. 65)) & (r <. 230) & (g <. 230) & (b <. 230)


// Define zone of interest
let zone = distleq(160,((r >. 250) & (g <. 11) & (b <. 11)))


// Smoothing filters
let buildingsFiltered = flt(3,(treshold))
//let buildingsFiltered = flt(5,(flt(2,flt(1,(buildings)))))


// Union with zone of interest
let buildingsSeg = and(zone, buildingsFiltered)


// Colored buildings
let buildingsSegRGB = rgb(mask(r,buildingsSeg),mask(g,buildingsSeg),mask(b,buildingsSeg))

// Save outputs
save "output/treshold.png" treshold
save "output/zone.png" zone
save "output/buildingsFiltered.png" buildingsFiltered
save "../../output/frontbunker_buildingsSeg.png" buildingsSeg
save "output/frontbunker_buildingsSegRGB.png" buildingsSegRGB
save "output/original.png" image
