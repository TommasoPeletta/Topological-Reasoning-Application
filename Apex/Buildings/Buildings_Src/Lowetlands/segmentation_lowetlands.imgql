// Topological Reasoning Application
// Jonathan Lo, Tommaso Peletta, Adrien Razurel


import "stdlib.imgql"

// Define smoothing filter
let flt(x,a) = distleq(x,distgeq(x,!a))

// Read image
load image = "lowetlands.png"


// Get colour components
let r = red(image)
let g = green(image)
let b = blue(image)


// Color treshold
let treshold = ((r >. 90) & (g >. 75) & (b >. 65)) & (r <. 230) & (g <. 230) & (b <. 230)


// Define zone of interest
let zone = distleq(150,((r >. 250) & (g <. 11) & (b <. 11)))


// Smoothing filters
let buildingsFiltered = flt(3,(treshold))
//let buildingsFiltered = flt(5,(flt(2,flt(1,(buildings)))))


// Union with zone of interest
let buildingsSeg = and(zone, buildingsFiltered)


// Colored buildings
let buildingsSegRGB = rgb(mask(r,buildingsSeg),mask(g,buildingsSeg),mask(b,buildingsSeg))



// Save outputs
save "output/original.png" image
save "output/buildings.png" treshold
save "output/zone.png" zone
save "output/buildingsFiltered.png" buildingsFiltered
save "../../output/lowetlands_buildingsSeg.png" buildingsSeg
save "output/lowetlands_buildingsSegRGB.png" buildingsSegRGB
