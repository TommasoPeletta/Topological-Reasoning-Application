// Topological Reasoning Application
// Jonathan Lo, Tommaso Peletta, Adrien Razurel


import "stdlib.imgql"

// Define smoothing filter
let flt(x,a) = distleq(x,distgeq(x,!a))

// Read image
load image = "apexmarket.png"


// Get colour components
let r = red(image)
let g = green(image)
let b = blue(image)


// Color treshold
let treshold = or(((r >. 85) & (g >. 75) & (b >. 75)) & (r <. 240) & (g <. 240) & (b <. 240) & !((g >. 200) & (b <. 130)),((r >=. 0) & (g >=. 0) & (b >=. 0)) & (r <. 10) & (g <. 10) & (b <. 10))


// Define zone of interest
let zone = distleq(150,((r <. 1) & (g <. 11) & (b >. 250)))


// Smoothing filters
let buildingsFiltered= flt(4,flt(1,(treshold)))


// Union with zone of interest
let buildingsSeg = and(zone,buildingsFiltered)


// Colored buildings
let buildingsSegRGB = rgb(mask(r,buildingsSeg),mask(g,buildingsSeg),mask(b,buildingsSeg))




// Save outputs
save "output/original.png" image
save "output/buildings.png" treshold
save "output/zone.png" zone
save "output/buildingsFiltered.png" buildingsFiltered
save "../../output/market_buildingsSeg.png" buildingsSeg
save "output/market_buildingsSegRGB.png" buildingsSegRGB
