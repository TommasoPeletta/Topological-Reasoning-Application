import "stdlib.imgql"

let flt(x,a) = distleq(x,distgeq(x,!a))

load image = "apexthunder.png"

let r = red(image)
let g = green(image)
let b = blue(image)

let thunderdomebuildings = ((r >. 90) & (g >. 75) & (b >. 75)) & (r <. 200) & (g <. 200) & (b <. 200)
let thunderdomeMask0 = distleq(180,((r <. 1) & (g <. 11) & (b >. 250)))

let thunderdomefilter = flt(5,flt(1,thunderdomebuildings))
//let thunderdomefilter = flt(4,(thunderdomebuildings))
let thunderdomeMask = and(thunderdomeMask0,thunderdomefilter)
//let maskedthunderdome = rgb(mask(r,thunderdomeMask0),mask(g,thunderdomeMask0),mask(b,thunderdomeMask0))
let maskedthunderdome = rgb(mask(r,thunderdomeMask),mask(g,thunderdomeMask),mask(b,thunderdomeMask))
/////
// Save the intermediate result
// Do check all the intermediate results!
// (use xdg-open IMAGE_FILE_NAME to open the default image viewer on ubuntu)
// In the viewer you can use the left and right arrow keys to navigate between images.
//

save "./output/thunderdomebuildings.png" thunderdomebuildings
save "./output/thunderdomefilter.png" thunderdomefilter
save "../output/thunderdome_buildingsSeg.png" thunderdomeMask
save "./output/thunderdomeMask0.png" thunderdomeMask0
save "./output/maskedthunderdome.png" maskedthunderdome
