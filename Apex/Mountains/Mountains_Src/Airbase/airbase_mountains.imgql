import "stdlib.imgql"

// filter function definition
let flt(x,a) = distleq(x,distgeq(x,!a))

// load original image
load image = "mountainairbase.jpg"

// read image components
let r = red(image)
let g = green(image)
let b = blue(image)

// define zone of interest
let zone = distleq(80,((r >. 250) & (g <. 11) & (b <. 11)))

let treshold = (r >. 50) & (g >. 56) & (b >. 30) & (r <. 160) & (g <. 160) & (b <. 60) //colour treshold

// smoothing filters
let filtered1  = touch(!treshold,border)
let filtered2 = !flt(2,filtered1)
let filtered3 = flt(2,filtered2)
let filtered4 = flt(3,!touch(!filtered3,border))

// Zone of interest only
let seg = zone & filtered4

// application of original image on result
let coloured = rgb(mask(r,seg),mask(g,seg),mask(b,seg))


// save outputs
save "./output/treshold.png" treshold
save "./output/zone.png" zone
save "./output/filtered1.png" filtered1
save "./output/filtered2.png" filtered2
save "./output/filtered3.png" filtered4
save "./output/original.png" image
save "./output/coloured.png" coloured
save "../../output/airbaseMountSeg.png" seg
